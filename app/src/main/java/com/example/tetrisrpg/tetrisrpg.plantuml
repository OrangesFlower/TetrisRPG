@startuml

title __TETRISRPG's Class Diagram__\n

  namespace com.example.tetrisrpg {
    class com.example.tetrisrpg.GameActivity {
        + checkThread : Thread
        + downThread : Thread
        + enemyAttack : Thread
        + enemyThread : Thread
        + handler : Handler
        ~ blockPaint : Paint
        ~ boxPaint : Paint
        ~ boxSize : int
        ~ boxs : Point[]
        ~ curSpeed : int
        ~ defeatNum : TextView
        ~ defeated : int
        ~ downButton : Button
        ~ enemyAbility : TextView
        ~ enemyImage : ImageView
        ~ enemyLife : ProgressBar
        ~ enemyName : TextView
        ~ gameBGM : boolean
        ~ gamePlayer : MediaPlayer
        ~ gameView : SurfaceView
        ~ hardDropButton : Button
        ~ holdButton : Button
        ~ holdImage : ImageView
        ~ holdType : int
        ~ isAttack : boolean
        ~ isConfuse : boolean
        ~ isOver : boolean
        ~ isPause : boolean
        ~ isPreRemv : int
        ~ isPreTspin : boolean
        ~ isTspin : boolean
        ~ leftButton : Button
        ~ level : int
        ~ linePaint : Paint
        ~ mapPaint : Paint
        ~ maps : boolean[][]
        ~ nextImage : ImageView
        ~ pauseButton : ImageButton
        ~ playerName : TextView
        ~ playerNamePre : String
        ~ playerView : GifImageView
        ~ rightButton : Button
        ~ rotateButton : Button
        ~ score : int
        ~ scoreView : TextView
        ~ sp : SharedPreferences
        ~ statePaint : Paint
        ~ xHight : int
        ~ xWidth : int
        - borderPaint : Paint
        - mSoundMap : HashMap<Integer, Integer>
        - mSoundPool : SoundPool
        + changePause()
        + checkLine()
        + checkOver()
        + onKeyDown()
        # onCreate()
        # onDestroy()
        ~ removeLine()
        - changeHold()
        - checkEnemy()
        - checkGame()
        - checkTspin()
        - getScreenHeight()
        - getScreenWidth()
        - goal()
        - initPreference()
        - initSound()
        - initdata()
        - initview()
        - lineRemvAnime()
        - loadSound()
        - playSound()
        - saveData()
        - setDialog()
        - setImage()
        - startGame()
    }
  }
  

  namespace com.example.tetrisrpg {
    class com.example.tetrisrpg.MainActivity {
        ~ button : Button
        ~ button2 : Button
        ~ button3 : Button
        ~ menuPlayer : MediaPlayer
        - exitTime : long
        - mSoundMap : HashMap<Integer, Integer>
        - mSoundPool : SoundPool
        + onKeyDown()
        # onCreate()
        # onDestroy()
        - initSound()
        - loadSound()
        - playSound()
    }
  }
  

  namespace com.example.tetrisrpg {
    class com.example.tetrisrpg.ScoreActivity {
        ~ gson : Gson
        ~ list : ArrayList<gameData>
        + onKeyDown()
        # onCreate()
        - readData()
    }
  }
  

  namespace com.example.tetrisrpg {
    class com.example.tetrisrpg.SettingActivity {
        + onKeyDown()
        # onCreate()
    }
  }
  

  namespace com.example.tetrisrpg {
    class com.example.tetrisrpg.Tetrominoes {
        ~ RGB : int[]
        ~ bottom : int
        ~ boxPaint : Paint
        ~ boxSize : int
        ~ boxs : Point[]
        ~ canHold : boolean
        ~ isBottom : boolean
        ~ isFix : boolean
        ~ maps : boolean[][]
        ~ shadow : Point[]
        ~ type : int
        ~ xLocation : int
        ~ yLocation : int
        + checkBottom()
        ~ Tetrominoes()
        ~ chooseType()
        ~ move()
        ~ moveValid()
        ~ refreshMaps()
        ~ refreshShadow()
        ~ rotate()
        ~ setFix()
        - checkRotate()
    }
  }
  

  namespace com.example.tetrisrpg {
    class com.example.tetrisrpg.anime {
    }
  }
  

  namespace com.example.tetrisrpg {
    class com.example.tetrisrpg.enemy {
        + ability : String
        + lifeValue : int
        + maxLife : int
        + name : String
        + type : int
        ~ avatar : int
        ~ block : boolean[][]
        ~ confuse : int
        ~ interval : int
        ~ level : int
        ~ maps : boolean[][]
        ~ speedUp : int
        ~ target : int
        + getMaps()
        ~ attack()
        ~ callMap()
        ~ confuse()
        ~ diging()
        ~ enemy()
        ~ getName()
        ~ refreshMaps()
        ~ rising()
        ~ setBlock()
        ~ setType()
        ~ speedUp()
        ~ wounded()
    }
  }
  

  namespace com.example.tetrisrpg {
    class com.example.tetrisrpg.gameData {
        - defeated : int
        - name : String
        - score : int
        + compareTo()
        + gameData()
        + gameData()
        + getDefeated()
        + getName()
        + getScore()
        + setDefeated()
        + setName()
        + setScore()
        + toString()
    }
  }
  

  com.example.tetrisrpg.GameActivity -up-|> androidx.appcompat.app.AppCompatActivity
  com.example.tetrisrpg.GameActivity o-- com.example.tetrisrpg.enemy : curEnemy
  com.example.tetrisrpg.GameActivity o-- com.example.tetrisrpg.Tetrominoes : curTetro
  com.example.tetrisrpg.GameActivity o-- com.example.tetrisrpg.Tetrominoes : nextTero
  com.example.tetrisrpg.MainActivity -up-|> androidx.appcompat.app.AppCompatActivity
  com.example.tetrisrpg.ScoreActivity -up-|> androidx.appcompat.app.AppCompatActivity
  com.example.tetrisrpg.SettingActivity -up-|> android.preference.PreferenceActivity
  com.example.tetrisrpg.gameData .up.|> java.lang.Comparable


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
